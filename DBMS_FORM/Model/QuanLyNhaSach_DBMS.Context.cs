//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBMS_FORM.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DOAN_QUANLYNHASACH_DBMSEntities : DbContext
    {
        public DOAN_QUANLYNHASACH_DBMSEntities()
            : base("name=DOAN_QUANLYNHASACH_DBMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CungCap> CungCaps { get; set; }
        public DbSet<DaBan> DaBans { get; set; }
        public DbSet<HoaDon> HoaDons { get; set; }
        public DbSet<Muon> Muons { get; set; }
        public DbSet<NhaCungCap> NhaCungCaps { get; set; }
        public DbSet<NV> NVs { get; set; }
        public DbSet<Sach> Saches { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<ThanhVien> ThanhViens { get; set; }
        public DbSet<TheLoai> TheLoais { get; set; }
    
        [EdmFunction("DOAN_QUANLYNHASACH_DBMSEntities", "fluongNV")]
        public virtual IQueryable<fluongNV_Result> fluongNV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fluongNV_Result>("[DOAN_QUANLYNHASACH_DBMSEntities].[fluongNV]()");
        }
    
        [EdmFunction("DOAN_QUANLYNHASACH_DBMSEntities", "fThanhVien")]
        public virtual IQueryable<fThanhVien_Result> fThanhVien()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fThanhVien_Result>("[DOAN_QUANLYNHASACH_DBMSEntities].[fThanhVien]()");
        }
    
        [EdmFunction("DOAN_QUANLYNHASACH_DBMSEntities", "fun_HoaDonOfNhanVien")]
        public virtual IQueryable<fun_HoaDonOfNhanVien_Result> fun_HoaDonOfNhanVien(Nullable<int> maNV)
        {
            var maNVParameter = maNV.HasValue ?
                new ObjectParameter("maNV", maNV) :
                new ObjectParameter("maNV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fun_HoaDonOfNhanVien_Result>("[DOAN_QUANLYNHASACH_DBMSEntities].[fun_HoaDonOfNhanVien](@maNV)", maNVParameter);
        }
    
        [EdmFunction("DOAN_QUANLYNHASACH_DBMSEntities", "fuNhanvienOfQl")]
        public virtual IQueryable<fuNhanvienOfQl_Result> fuNhanvienOfQl(Nullable<int> maNQL)
        {
            var maNQLParameter = maNQL.HasValue ?
                new ObjectParameter("maNQL", maNQL) :
                new ObjectParameter("maNQL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fuNhanvienOfQl_Result>("[DOAN_QUANLYNHASACH_DBMSEntities].[fuNhanvienOfQl](@maNQL)", maNQLParameter);
        }
    
        [EdmFunction("DOAN_QUANLYNHASACH_DBMSEntities", "MuonQuaHan")]
        public virtual IQueryable<MuonQuaHan_Result> MuonQuaHan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MuonQuaHan_Result>("[DOAN_QUANLYNHASACH_DBMSEntities].[MuonQuaHan]()");
        }
    
        [EdmFunction("DOAN_QUANLYNHASACH_DBMSEntities", "NVinHD")]
        public virtual IQueryable<NVinHD_Result> NVinHD(Nullable<int> maHD)
        {
            var maHDParameter = maHD.HasValue ?
                new ObjectParameter("maHD", maHD) :
                new ObjectParameter("maHD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NVinHD_Result>("[DOAN_QUANLYNHASACH_DBMSEntities].[NVinHD](@maHD)", maHDParameter);
        }
    
        [EdmFunction("DOAN_QUANLYNHASACH_DBMSEntities", "SearchNhaCC")]
        public virtual IQueryable<SearchNhaCC_Result> SearchNhaCC(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SearchNhaCC_Result>("[DOAN_QUANLYNHASACH_DBMSEntities].[SearchNhaCC](@search)", searchParameter);
        }
    
        public virtual int deleteSach(Nullable<int> maSach)
        {
            var maSachParameter = maSach.HasValue ?
                new ObjectParameter("maSach", maSach) :
                new ObjectParameter("maSach", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteSach", maSachParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
